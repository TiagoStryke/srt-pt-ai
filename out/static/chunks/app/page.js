/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fuser%2FDownloads%2Flegendas%2Fsrt-ai%2Fapp%2Fpage.tsx&server=false!":
/*!********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fuser%2FDownloads%2Flegendas%2Fsrt-ai%2Fapp%2Fpage.tsx&server=false! ***!
  \********************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRnVzZXIlMkZEb3dubG9hZHMlMkZsZWdlbmRhcyUyRnNydC1haSUyRmFwcCUyRnBhZ2UudHN4JnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz8zZGY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3VzZXIvRG93bmxvYWRzL2xlZ2VuZGFzL3NydC1haS9hcHAvcGFnZS50c3hcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fuser%2FDownloads%2Flegendas%2Fsrt-ai%2Fapp%2Fpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tailwindcss/tailwind.css":
/*!***********************************************!*\
  !*** ./node_modules/tailwindcss/tailwind.css ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"9b9510258220\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90YWlsd2luZGNzcy90YWlsd2luZC5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90YWlsd2luZGNzcy90YWlsd2luZC5jc3M/YjFhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjliOTUxMDI1ODIyMFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tailwindcss/tailwind.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _fonts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/fonts */ \"(app-pages-browser)/./fonts/index.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_Form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/Form */ \"(app-pages-browser)/./components/Form.tsx\");\n/* harmony import */ var _components_Timestamp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/Timestamp */ \"(app-pages-browser)/./components/Timestamp.tsx\");\n/* harmony import */ var _lib_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/client */ \"(app-pages-browser)/./lib/client.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction classNames() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    return classes.filter(Boolean).join(\" \");\n}\n// Função para processar o texto e garantir que cada linha com hífen esteja em uma linha separada\nconst processSubtitleFormat = (content)=>{\n    // Divide o conteúdo em blocos de legendas (separados por linhas em branco)\n    const blocks = content.split(/\\n\\n/);\n    return blocks.map((block)=>{\n        const lines = block.split(\"\\n\");\n        // Se temos pelo menos 3 linhas (número, timestamp, texto)\n        if (lines.length >= 3) {\n            // Pega o número da legenda e o timestamp\n            const number = lines[0];\n            const timestamp = lines[1];\n            // Junta todas as linhas de texto\n            const textLines = lines.slice(2);\n            let text = textLines.join(\" \");\n            // Verifica se temos múltiplos hífens indicando diálogos\n            // Primeiro caso: texto começa com hífen e contém outro hífen precedido por espaço\n            if (text.match(/^-.*\\s+-/)) {\n                // Substitui todos os hífens (exceto o primeiro) por quebra de linha e hífen\n                text = text.replace(/^-/, \"- \").replace(/\\s+-/g, \"\\n-\");\n            } else if (text.match(/\\s+-.*\\s+-/)) {\n                // Substitui todos os hífens por quebra de linha e hífen\n                text = text.replace(/\\s+-/g, \"\\n-\");\n            }\n            // Se o texto acabou em um formato não desejado, corrige\n            text = text.replace(/^\\s*-\\s*/g, \"-\");\n            // Reconstrói o bloco\n            return \"\".concat(number, \"\\n\").concat(timestamp, \"\\n\").concat(text);\n        }\n        return block;\n    }).join(\"\\n\\n\");\n};\nconst triggerFileDownload = (filename, content)=>{\n    const element = document.createElement(\"a\");\n    const file = new Blob([\n        content\n    ], {\n        type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element);\n    element.click();\n    // Limpa o elemento do DOM após o download\n    setTimeout(()=>{\n        document.body.removeChild(element);\n        URL.revokeObjectURL(element.href);\n    }, 100);\n};\nfunction Translating(param) {\n    let { chunks } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex gap-y-2 flex-col-reverse\",\n        children: chunks.map((chunk)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Timestamp__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                ...chunk\n            }, \"\".concat(chunk.index, \"-\").concat(chunk.start), false, {\n                fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                lineNumber: 76,\n                columnNumber: 5\n            }, this))\n    }, void 0, false, {\n        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n        lineNumber: 74,\n        columnNumber: 3\n    }, this);\n}\n_c = Translating;\nfunction Home() {\n    _s();\n    const [status, setStatus] = react__WEBPACK_IMPORTED_MODULE_2___default().useState(\"idle\");\n    const [translatedSrt, setTranslatedSrt] = react__WEBPACK_IMPORTED_MODULE_2___default().useState(\"\");\n    const [translatedChunks, setTranslatedChunks] = react__WEBPACK_IMPORTED_MODULE_2___default().useState([]);\n    const [originalChunks, setOriginalChunks] = react__WEBPACK_IMPORTED_MODULE_2___default().useState([]);\n    const [processedFiles, setProcessedFiles] = react__WEBPACK_IMPORTED_MODULE_2___default().useState([]);\n    const [currentFileName, setCurrentFileName] = react__WEBPACK_IMPORTED_MODULE_2___default().useState(\"\");\n    const [apiKey, setApiKey] = react__WEBPACK_IMPORTED_MODULE_2___default().useState(()=>{\n        // Tentar obter a chave de API do localStorage ou usar uma chave padrão vazia\n        if (true) {\n            return localStorage.getItem(\"gemini_api_key\") || \"\";\n        }\n        return \"\";\n    });\n    const [apiError, setApiError] = react__WEBPACK_IMPORTED_MODULE_2___default().useState(\"\");\n    // Função para verificar se o arquivo já tem uma versão traduzida\n    const isAlreadyTranslated = (fileName)=>{\n        const fileNameWithoutExt = fileName.replace(/\\.srt$/i, \"\");\n        const translatedFileName = \"\".concat(fileNameWithoutExt, \".pt.srt\");\n        // Verifica se o arquivo já está na lista de processados\n        return processedFiles.includes(fileName) || processedFiles.includes(translatedFileName);\n    };\n    async function handleStream(response) {\n        const data = response.body;\n        if (!data) return;\n        let content = \"\";\n        let doneReading = false;\n        const reader = data.getReader();\n        const decoder = new TextDecoder();\n        while(!doneReading){\n            const { value, done } = await reader.read();\n            doneReading = done;\n            const chunk = decoder.decode(value);\n            content += \"\".concat(chunk, \"\\n\\n\");\n            setTranslatedSrt((prev)=>prev + chunk);\n            if (chunk.trim().length) setTranslatedChunks((prev)=>[\n                    ...prev,\n                    parseChunk(chunk)\n                ]);\n        }\n        return content;\n        function parseChunk(chunkStr) {\n            const { id, timestamp, text } = (0,_lib_client__WEBPACK_IMPORTED_MODULE_5__.parseSegment)(chunkStr);\n            const { start, end } = (0,_lib_client__WEBPACK_IMPORTED_MODULE_5__.parseTimestamp)(timestamp);\n            return {\n                index: id.toString(),\n                start,\n                end,\n                text\n            };\n        }\n    }\n    async function handleSubmit(content, language, fileName) {\n        try {\n            if (!content) {\n                console.error(\"No content provided\");\n                return;\n            }\n            setStatus(\"busy\");\n            setCurrentFileName(fileName);\n            // Reset previous state\n            setTranslatedSrt(\"\");\n            setTranslatedChunks([]);\n            setOriginalChunks([]);\n            const segments = content.split(/\\r\\n\\r\\n|\\n\\n/).filter((segment)=>{\n                const lines = segment.split(/\\r\\n|\\n/);\n                const id = Number.parseInt(lines[0], 10);\n                return lines.length >= 3 && // Must have at least id, timestamp, and text\n                !Number.isNaN(id) && // First line must be a number\n                lines[1].includes(\" --> \"); // Second line must be a timestamp\n            });\n            if (!segments.length) {\n                setStatus(\"idle\");\n                alert(\"Invalid SRT file format. Please check your file.\");\n                return;\n            }\n            try {\n                const originalSegments = segments.map(_lib_client__WEBPACK_IMPORTED_MODULE_5__.parseSegment);\n                setOriginalChunks(originalSegments.map((seg)=>({\n                        index: seg.id.toString(),\n                        start: seg.timestamp.split(\" --> \")[0],\n                        end: seg.timestamp.split(\" --> \")[1],\n                        text: seg.text\n                    })));\n            } catch (error) {\n                setStatus(\"idle\");\n                alert(\"Error parsing SRT file. Please check the file format.\");\n                console.error(\"Parsing error:\", error);\n                return;\n            }\n            // Limpar qualquer erro anterior\n            setApiError(\"\");\n            const response = await fetch(\"/api\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    content,\n                    language,\n                    apiKey\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.ok) {\n                const content = await handleStream(response);\n                // Gera o nome do arquivo no formato original.pt.srt\n                const fileNameWithoutExt = fileName.replace(/\\.srt$/i, \"\");\n                const filename = \"\".concat(fileNameWithoutExt, \".pt.srt\");\n                if (content) {\n                    // Aplica o pós-processamento para corrigir o formato das legendas\n                    const processedContent = processSubtitleFormat(content);\n                    setStatus(\"done\");\n                    triggerFileDownload(filename, processedContent);\n                    // Adiciona o arquivo à lista de processados\n                    setProcessedFiles((prev)=>[\n                            ...prev,\n                            fileName\n                        ]);\n                    // Aguarda um breve momento antes de processar o próximo arquivo\n                    setTimeout(()=>{\n                        // Verifica se existe um formulário e dispara o evento submit\n                        const form = document.querySelector(\"form\");\n                        if (form) {\n                            form.dispatchEvent(new Event(\"submit\", {\n                                cancelable: true,\n                                bubbles: true\n                            }));\n                        }\n                        setStatus(\"idle\");\n                    }, 1000);\n                } else {\n                    setStatus(\"idle\");\n                    alert(\"Error occurred while reading the file\");\n                }\n            } else {\n                setStatus(\"idle\");\n                try {\n                    // Tentar obter o erro da resposta\n                    const errorData = await response.json();\n                    setApiError(errorData.error || \"Erro ao enviar a solicita\\xe7\\xe3o de tradu\\xe7\\xe3o\");\n                    console.error(\"API error:\", errorData);\n                } catch (e) {\n                    setApiError(\"Erro ao enviar a solicita\\xe7\\xe3o de tradu\\xe7\\xe3o\");\n                    console.error(\"Error occurred while submitting the translation request\");\n                }\n            }\n        } catch (error) {\n            setStatus(\"idle\");\n            setApiError(error instanceof Error ? error.message : \"Erro durante a leitura do arquivo e solicita\\xe7\\xe3o de tradu\\xe7\\xe3o\");\n            console.error(\"Error during file reading and translation request:\", error);\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: classNames(\"max-w-2xl flex flex-col items-center mx-auto\", _fonts__WEBPACK_IMPORTED_MODULE_1__.libre.className),\n        children: [\n            status === \"idle\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: classNames(\"px-4 text-3xl md:text-5xl text-center font-bold my-6\", _fonts__WEBPACK_IMPORTED_MODULE_1__.roaldDahl.className),\n                        children: \"Tradutor de Legendas SRT para Portugu\\xeas Brasileiro\"\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 251,\n                        columnNumber: 6\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Form__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        onSubmit: handleSubmit,\n                        apiKey: apiKey,\n                        onApiKeyChange: setApiKey,\n                        apiError: apiError\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 259,\n                        columnNumber: 6\n                    }, this)\n                ]\n            }, void 0, true),\n            status === \"busy\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: classNames(\"px-4 text-3xl md:text-5xl text-center font-bold my-6\", _fonts__WEBPACK_IMPORTED_MODULE_1__.roaldDahl.className),\n                        children: \"Traduzindo…\"\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 269,\n                        columnNumber: 6\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"(O arquivo ser\\xe1 baixado automaticamente quando estiver pronto)\"\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 277,\n                        columnNumber: 6\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Translating, {\n                        chunks: translatedChunks.map((chunk, i)=>{\n                            var _originalChunks_i;\n                            return {\n                                ...chunk,\n                                originalText: (_originalChunks_i = originalChunks[i]) === null || _originalChunks_i === void 0 ? void 0 : _originalChunks_i.text\n                            };\n                        })\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 278,\n                        columnNumber: 6\n                    }, this)\n                ]\n            }, void 0, true),\n            status === \"done\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: classNames(\"px-4 text-3xl md:text-5xl text-center font-bold my-6\", _fonts__WEBPACK_IMPORTED_MODULE_1__.roaldDahl.className),\n                        children: \"Tradu\\xe7\\xe3o conclu\\xedda!\"\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 288,\n                        columnNumber: 6\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Arquivo traduzido e salvo! \\uD83C\\uDF7F\"\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 296,\n                        columnNumber: 6\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"mt-4 text-[#444444]\",\n                        children: [\n                            \"Arquivo salvo como \",\n                            currentFileName.replace(/\\.srt$/i, \"\"),\n                            \".pt.srt\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 297,\n                        columnNumber: 6\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setStatus(\"idle\"),\n                        className: \"bg-[#444444] hover:bg-[#3a3a3a] text-white mt-6 font-bold py-2 px-6 rounded-lg\",\n                        children: \"Continuar traduzindo\"\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n                        lineNumber: 300,\n                        columnNumber: 6\n                    }, this)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/user/Downloads/legendas/srt-ai/app/page.tsx\",\n        lineNumber: 243,\n        columnNumber: 3\n    }, this);\n}\n_s(Home, \"GSQf4yN6L9Y/bQWCw+rfrmFs6gM=\");\n_c1 = Home;\nvar _c, _c1;\n$RefreshReg$(_c, \"Translating\");\n$RefreshReg$(_c1, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBRTJDO0FBQ2pCO0FBRVc7QUFDVTtBQUVhO0FBRzVELFNBQVNPO0lBQVc7UUFBR0MsUUFBSCx1QkFBb0I7O0lBQ3ZDLE9BQU9BLFFBQVFDLE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxDQUFDO0FBQ3JDO0FBRUEsaUdBQWlHO0FBQ2pHLE1BQU1DLHdCQUF3QixDQUFDQztJQUM5QiwyRUFBMkU7SUFDM0UsTUFBTUMsU0FBU0QsUUFBUUUsS0FBSyxDQUFDO0lBRTdCLE9BQU9ELE9BQU9FLEdBQUcsQ0FBQ0MsQ0FBQUE7UUFDakIsTUFBTUMsUUFBUUQsTUFBTUYsS0FBSyxDQUFDO1FBRTFCLDBEQUEwRDtRQUMxRCxJQUFJRyxNQUFNQyxNQUFNLElBQUksR0FBRztZQUN0Qix5Q0FBeUM7WUFDekMsTUFBTUMsU0FBU0YsS0FBSyxDQUFDLEVBQUU7WUFDdkIsTUFBTUcsWUFBWUgsS0FBSyxDQUFDLEVBQUU7WUFFMUIsaUNBQWlDO1lBQ2pDLE1BQU1JLFlBQVlKLE1BQU1LLEtBQUssQ0FBQztZQUM5QixJQUFJQyxPQUFPRixVQUFVWCxJQUFJLENBQUM7WUFFMUIsd0RBQXdEO1lBQ3hELGtGQUFrRjtZQUNsRixJQUFJYSxLQUFLQyxLQUFLLENBQUMsYUFBYTtnQkFDM0IsNEVBQTRFO2dCQUM1RUQsT0FBT0EsS0FBS0UsT0FBTyxDQUFDLE1BQU0sTUFBTUEsT0FBTyxDQUFDLFNBQVM7WUFDbEQsT0FFSyxJQUFJRixLQUFLQyxLQUFLLENBQUMsZUFBZTtnQkFDbEMsd0RBQXdEO2dCQUN4REQsT0FBT0EsS0FBS0UsT0FBTyxDQUFDLFNBQVM7WUFDOUI7WUFFQSx3REFBd0Q7WUFDeERGLE9BQU9BLEtBQUtFLE9BQU8sQ0FBQyxhQUFhO1lBRWpDLHFCQUFxQjtZQUNyQixPQUFPLEdBQWNMLE9BQVhELFFBQU8sTUFBa0JJLE9BQWRILFdBQVUsTUFBUyxPQUFMRztRQUNwQztRQUVBLE9BQU9QO0lBQ1IsR0FBR04sSUFBSSxDQUFDO0FBQ1Q7QUFFQSxNQUFNZ0Isc0JBQXNCLENBQUNDLFVBQWtCZjtJQUM5QyxNQUFNZ0IsVUFBVUMsU0FBU0MsYUFBYSxDQUFDO0lBQ3ZDLE1BQU1DLE9BQU8sSUFBSUMsS0FBSztRQUFDcEI7S0FBUSxFQUFFO1FBQUVxQixNQUFNO0lBQWE7SUFDdERMLFFBQVFNLElBQUksR0FBR0MsSUFBSUMsZUFBZSxDQUFDTDtJQUNuQ0gsUUFBUVMsUUFBUSxHQUFHVjtJQUNuQkUsU0FBU1MsSUFBSSxDQUFDQyxXQUFXLENBQUNYO0lBQzFCQSxRQUFRWSxLQUFLO0lBRWIsMENBQTBDO0lBQzFDQyxXQUFXO1FBQ1ZaLFNBQVNTLElBQUksQ0FBQ0ksV0FBVyxDQUFDZDtRQUMxQk8sSUFBSVEsZUFBZSxDQUFDZixRQUFRTSxJQUFJO0lBQ2pDLEdBQUc7QUFDSjtBQUVBLFNBQVNVLFlBQVksS0FBK0I7UUFBL0IsRUFBRUMsTUFBTSxFQUF1QixHQUEvQjtJQUNwQixxQkFDQyw4REFBQ0M7UUFBSUMsV0FBVTtrQkFDYkYsT0FBTzlCLEdBQUcsQ0FBQyxDQUFDaUMsc0JBQ1osOERBQUM3Qyw2REFBU0E7Z0JBQXdDLEdBQUc2QyxLQUFLO2VBQTFDLEdBQWtCQSxPQUFmQSxNQUFNQyxLQUFLLEVBQUMsS0FBZSxPQUFaRCxNQUFNRSxLQUFLOzs7Ozs7Ozs7O0FBSWpEO0tBUlNOO0FBVU0sU0FBU087O0lBQ3ZCLE1BQU0sQ0FBQ0MsUUFBUUMsVUFBVSxHQUFHcEQscURBQWMsQ0FBMkI7SUFDckUsTUFBTSxDQUFDc0QsZUFBZUMsaUJBQWlCLEdBQUd2RCxxREFBYyxDQUFDO0lBQ3pELE1BQU0sQ0FBQ3dELGtCQUFrQkMsb0JBQW9CLEdBQUd6RCxxREFBYyxDQUFVLEVBQUU7SUFDMUUsTUFBTSxDQUFDMEQsZ0JBQWdCQyxrQkFBa0IsR0FBRzNELHFEQUFjLENBQVUsRUFBRTtJQUN0RSxNQUFNLENBQUM0RCxnQkFBZ0JDLGtCQUFrQixHQUFHN0QscURBQWMsQ0FBVyxFQUFFO0lBQ3ZFLE1BQU0sQ0FBQzhELGlCQUFpQkMsbUJBQW1CLEdBQUcvRCxxREFBYyxDQUFTO0lBQ3JFLE1BQU0sQ0FBQ2dFLFFBQVFDLFVBQVUsR0FBR2pFLHFEQUFjLENBQVM7UUFDbEQsNkVBQTZFO1FBQzdFLElBQUksSUFBa0IsRUFBYTtZQUNsQyxPQUFPa0UsYUFBYUMsT0FBTyxDQUFDLHFCQUFxQjtRQUNsRDtRQUNBLE9BQU87SUFDUjtJQUNBLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHckUscURBQWMsQ0FBUztJQUV2RCxpRUFBaUU7SUFDakUsTUFBTXNFLHNCQUFzQixDQUFDQztRQUM1QixNQUFNQyxxQkFBcUJELFNBQVMvQyxPQUFPLENBQUMsV0FBVztRQUN2RCxNQUFNaUQscUJBQXFCLEdBQXNCLE9BQW5CRCxvQkFBbUI7UUFFakQsd0RBQXdEO1FBQ3hELE9BQU9aLGVBQWVjLFFBQVEsQ0FBQ0gsYUFBYVgsZUFBZWMsUUFBUSxDQUFDRDtJQUNyRTtJQUVBLGVBQWVFLGFBQWFDLFFBQWtCO1FBQzdDLE1BQU1DLE9BQU9ELFNBQVN2QyxJQUFJO1FBQzFCLElBQUksQ0FBQ3dDLE1BQU07UUFFWCxJQUFJbEUsVUFBVTtRQUNkLElBQUltRSxjQUFjO1FBQ2xCLE1BQU1DLFNBQVNGLEtBQUtHLFNBQVM7UUFDN0IsTUFBTUMsVUFBVSxJQUFJQztRQUVwQixNQUFPLENBQUNKLFlBQWE7WUFDcEIsTUFBTSxFQUFFSyxLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFHLE1BQU1MLE9BQU9NLElBQUk7WUFDekNQLGNBQWNNO1lBQ2QsTUFBTXJDLFFBQVFrQyxRQUFRSyxNQUFNLENBQUNIO1lBRTdCeEUsV0FBVyxHQUFTLE9BQU5vQyxPQUFNO1lBQ3BCUSxpQkFBaUIsQ0FBQ2dDLE9BQVNBLE9BQU94QztZQUNsQyxJQUFJQSxNQUFNeUMsSUFBSSxHQUFHdkUsTUFBTSxFQUN0QndDLG9CQUFvQixDQUFDOEIsT0FBUzt1QkFBSUE7b0JBQU1FLFdBQVcxQztpQkFBTztRQUM1RDtRQUVBLE9BQU9wQztRQUVQLFNBQVM4RSxXQUFXQyxRQUFnQjtZQUNuQyxNQUFNLEVBQUVDLEVBQUUsRUFBRXhFLFNBQVMsRUFBRUcsSUFBSSxFQUFFLEdBQUduQix5REFBWUEsQ0FBQ3VGO1lBQzdDLE1BQU0sRUFBRXpDLEtBQUssRUFBRTJDLEdBQUcsRUFBRSxHQUFHeEYsMkRBQWNBLENBQUNlO1lBQ3RDLE9BQU87Z0JBQUU2QixPQUFPMkMsR0FBR0UsUUFBUTtnQkFBSTVDO2dCQUFPMkM7Z0JBQUt0RTtZQUFLO1FBQ2pEO0lBQ0Q7SUFFQSxlQUFld0UsYUFBYW5GLE9BQWUsRUFBRW9GLFFBQWdCLEVBQUV4QixRQUFnQjtRQUM5RSxJQUFJO1lBQ0gsSUFBSSxDQUFDNUQsU0FBUztnQkFDYnFGLFFBQVFDLEtBQUssQ0FBQztnQkFDZDtZQUNEO1lBRUE3QyxVQUFVO1lBQ1ZXLG1CQUFtQlE7WUFDbkIsdUJBQXVCO1lBQ3ZCaEIsaUJBQWlCO1lBQ2pCRSxvQkFBb0IsRUFBRTtZQUN0QkUsa0JBQWtCLEVBQUU7WUFFcEIsTUFBTXVDLFdBQVd2RixRQUFRRSxLQUFLLENBQUMsaUJBQWlCTixNQUFNLENBQUMsQ0FBQzRGO2dCQUN2RCxNQUFNbkYsUUFBUW1GLFFBQVF0RixLQUFLLENBQUM7Z0JBQzVCLE1BQU04RSxLQUFLUyxPQUFPQyxRQUFRLENBQUNyRixLQUFLLENBQUMsRUFBRSxFQUFFO2dCQUNyQyxPQUNDQSxNQUFNQyxNQUFNLElBQUksS0FBSyw2Q0FBNkM7Z0JBQ2xFLENBQUNtRixPQUFPRSxLQUFLLENBQUNYLE9BQU8sOEJBQThCO2dCQUNuRDNFLEtBQUssQ0FBQyxFQUFFLENBQUMwRCxRQUFRLENBQUMsVUFDaEIsa0NBQWtDO1lBQ3RDO1lBRUEsSUFBSSxDQUFDd0IsU0FBU2pGLE1BQU0sRUFBRTtnQkFDckJtQyxVQUFVO2dCQUNWbUQsTUFBTTtnQkFDTjtZQUNEO1lBRUEsSUFBSTtnQkFDSCxNQUFNQyxtQkFBbUJOLFNBQVNwRixHQUFHLENBQUNYLHFEQUFZQTtnQkFDbER3RCxrQkFDQzZDLGlCQUFpQjFGLEdBQUcsQ0FBQyxDQUFDMkYsTUFBUzt3QkFDOUJ6RCxPQUFPeUQsSUFBSWQsRUFBRSxDQUFDRSxRQUFRO3dCQUN0QjVDLE9BQU93RCxJQUFJdEYsU0FBUyxDQUFDTixLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUU7d0JBQ3RDK0UsS0FBS2EsSUFBSXRGLFNBQVMsQ0FBQ04sS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFFO3dCQUNwQ1MsTUFBTW1GLElBQUluRixJQUFJO29CQUNmO1lBRUYsRUFBRSxPQUFPMkUsT0FBTztnQkFDZjdDLFVBQVU7Z0JBQ1ZtRCxNQUFNO2dCQUNOUCxRQUFRQyxLQUFLLENBQUMsa0JBQWtCQTtnQkFDaEM7WUFDRDtZQUVBLGdDQUFnQztZQUNoQzVCLFlBQVk7WUFFWixNQUFNTyxXQUFXLE1BQU04QixNQUFNLFFBQVE7Z0JBQ3BDQyxRQUFRO2dCQUNSdEUsTUFBTXVFLEtBQUtDLFNBQVMsQ0FBQztvQkFBRWxHO29CQUFTb0Y7b0JBQVUvQjtnQkFBTztnQkFDakQ4QyxTQUFTO29CQUFFLGdCQUFnQjtnQkFBbUI7WUFDL0M7WUFFQSxJQUFJbEMsU0FBU21DLEVBQUUsRUFBRTtnQkFDaEIsTUFBTXBHLFVBQVUsTUFBTWdFLGFBQWFDO2dCQUNuQyxvREFBb0Q7Z0JBQ3BELE1BQU1KLHFCQUFxQkQsU0FBUy9DLE9BQU8sQ0FBQyxXQUFXO2dCQUN2RCxNQUFNRSxXQUFXLEdBQXNCLE9BQW5COEMsb0JBQW1CO2dCQUV2QyxJQUFJN0QsU0FBUztvQkFDWixrRUFBa0U7b0JBQ2xFLE1BQU1xRyxtQkFBbUJ0RyxzQkFBc0JDO29CQUUvQ3lDLFVBQVU7b0JBQ1YzQixvQkFBb0JDLFVBQVVzRjtvQkFDOUIsNENBQTRDO29CQUM1Q25ELGtCQUFrQjBCLENBQUFBLE9BQVE7K0JBQUlBOzRCQUFNaEI7eUJBQVM7b0JBRTdDLGdFQUFnRTtvQkFDaEUvQixXQUFXO3dCQUNWLDZEQUE2RDt3QkFDN0QsTUFBTXlFLE9BQU9yRixTQUFTc0YsYUFBYSxDQUFDO3dCQUNwQyxJQUFJRCxNQUFNOzRCQUNUQSxLQUFLRSxhQUFhLENBQUMsSUFBSUMsTUFBTSxVQUFVO2dDQUFFQyxZQUFZO2dDQUFNQyxTQUFTOzRCQUFLO3dCQUMxRTt3QkFDQWxFLFVBQVU7b0JBQ1gsR0FBRztnQkFDSixPQUFPO29CQUNOQSxVQUFVO29CQUNWbUQsTUFBTTtnQkFDUDtZQUNELE9BQU87Z0JBQ05uRCxVQUFVO2dCQUNWLElBQUk7b0JBQ0gsa0NBQWtDO29CQUNsQyxNQUFNbUUsWUFBWSxNQUFNM0MsU0FBUzRDLElBQUk7b0JBQ3JDbkQsWUFBWWtELFVBQVV0QixLQUFLLElBQUk7b0JBQy9CRCxRQUFRQyxLQUFLLENBQUMsY0FBY3NCO2dCQUM3QixFQUFFLE9BQU9FLEdBQUc7b0JBQ1hwRCxZQUFZO29CQUNaMkIsUUFBUUMsS0FBSyxDQUFDO2dCQUNmO1lBQ0Q7UUFDRCxFQUFFLE9BQU9BLE9BQU87WUFDZjdDLFVBQVU7WUFDVmlCLFlBQVk0QixpQkFBaUJ5QixRQUFRekIsTUFBTTBCLE9BQU8sR0FBRztZQUNyRDNCLFFBQVFDLEtBQUssQ0FDWixzREFDQUE7UUFFRjtJQUNEO0lBRUEscUJBQ0MsOERBQUMyQjtRQUNBOUUsV0FBV3pDLFdBQ1YsZ0RBQ0FQLHlDQUFLQSxDQUFDZ0QsU0FBUzs7WUFHZkssV0FBVyx3QkFDWDs7a0NBQ0MsOERBQUMwRTt3QkFDQS9FLFdBQVd6QyxXQUNWLHdEQUNBTiw2Q0FBU0EsQ0FBQytDLFNBQVM7a0NBRXBCOzs7Ozs7a0NBR0QsOERBQUM3Qyx3REFBSUE7d0JBQ0o2SCxVQUFVaEM7d0JBQ1Y5QixRQUFRQTt3QkFDUitELGdCQUFnQjlEO3dCQUNoQkcsVUFBVUE7Ozs7Ozs7O1lBSVpqQixXQUFXLHdCQUNYOztrQ0FDQyw4REFBQzBFO3dCQUNBL0UsV0FBV3pDLFdBQ1Ysd0RBQ0FOLDZDQUFTQSxDQUFDK0MsU0FBUztrQ0FFcEI7Ozs7OztrQ0FHRCw4REFBQ2tGO2tDQUFFOzs7Ozs7a0NBQ0gsOERBQUNyRjt3QkFDQUMsUUFBUVksaUJBQWlCMUMsR0FBRyxDQUFDLENBQUNpQyxPQUFPa0Y7Z0NBRXRCdkU7bUNBRjZCO2dDQUMzQyxHQUFHWCxLQUFLO2dDQUNSbUYsWUFBWSxHQUFFeEUsb0JBQUFBLGNBQWMsQ0FBQ3VFLEVBQUUsY0FBakJ2RSx3Q0FBQUEsa0JBQW1CcEMsSUFBSTs0QkFDdEM7Ozs7Ozs7OztZQUlGNkIsV0FBVyx3QkFDWDs7a0NBQ0MsOERBQUMwRTt3QkFDQS9FLFdBQVd6QyxXQUNWLHdEQUNBTiw2Q0FBU0EsQ0FBQytDLFNBQVM7a0NBRXBCOzs7Ozs7a0NBR0QsOERBQUNrRjtrQ0FBRTs7Ozs7O2tDQUNILDhEQUFDQTt3QkFBRWxGLFdBQVU7OzRCQUFzQjs0QkFDZGdCLGdCQUFnQnRDLE9BQU8sQ0FBQyxXQUFXOzRCQUFJOzs7Ozs7O2tDQUU1RCw4REFBQzJHO3dCQUNBQyxTQUFTLElBQU1oRixVQUFVO3dCQUN6Qk4sV0FBVTtrQ0FDVjs7Ozs7Ozs7Ozs7Ozs7QUFPTjtHQXBPd0JJO01BQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9wYWdlLnRzeD83NjAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBsaWJyZSwgcm9hbGREYWhsIH0gZnJvbSBcIkAvZm9udHNcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IEZvcm0gZnJvbSBcIkAvY29tcG9uZW50cy9Gb3JtXCI7XG5pbXBvcnQgVGltZXN0YW1wIGZyb20gXCJAL2NvbXBvbmVudHMvVGltZXN0YW1wXCI7XG5cbmltcG9ydCB7IHBhcnNlU2VnbWVudCwgcGFyc2VUaW1lc3RhbXAgfSBmcm9tIFwiQC9saWIvY2xpZW50XCI7XG5pbXBvcnQgdHlwZSB7IENodW5rIH0gZnJvbSBcIkAvdHlwZXNcIjtcblxuZnVuY3Rpb24gY2xhc3NOYW1lcyguLi5jbGFzc2VzOiBzdHJpbmdbXSkge1xuXHRyZXR1cm4gY2xhc3Nlcy5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG59XG5cbi8vIEZ1bsOnw6NvIHBhcmEgcHJvY2Vzc2FyIG8gdGV4dG8gZSBnYXJhbnRpciBxdWUgY2FkYSBsaW5oYSBjb20gaMOtZmVuIGVzdGVqYSBlbSB1bWEgbGluaGEgc2VwYXJhZGFcbmNvbnN0IHByb2Nlc3NTdWJ0aXRsZUZvcm1hdCA9IChjb250ZW50OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuXHQvLyBEaXZpZGUgbyBjb250ZcO6ZG8gZW0gYmxvY29zIGRlIGxlZ2VuZGFzIChzZXBhcmFkb3MgcG9yIGxpbmhhcyBlbSBicmFuY28pXG5cdGNvbnN0IGJsb2NrcyA9IGNvbnRlbnQuc3BsaXQoL1xcblxcbi8pO1xuXHRcblx0cmV0dXJuIGJsb2Nrcy5tYXAoYmxvY2sgPT4ge1xuXHRcdGNvbnN0IGxpbmVzID0gYmxvY2suc3BsaXQoJ1xcbicpO1xuXHRcdFxuXHRcdC8vIFNlIHRlbW9zIHBlbG8gbWVub3MgMyBsaW5oYXMgKG7Dum1lcm8sIHRpbWVzdGFtcCwgdGV4dG8pXG5cdFx0aWYgKGxpbmVzLmxlbmd0aCA+PSAzKSB7XG5cdFx0XHQvLyBQZWdhIG8gbsO6bWVybyBkYSBsZWdlbmRhIGUgbyB0aW1lc3RhbXBcblx0XHRcdGNvbnN0IG51bWJlciA9IGxpbmVzWzBdO1xuXHRcdFx0Y29uc3QgdGltZXN0YW1wID0gbGluZXNbMV07XG5cdFx0XHRcblx0XHRcdC8vIEp1bnRhIHRvZGFzIGFzIGxpbmhhcyBkZSB0ZXh0b1xuXHRcdFx0Y29uc3QgdGV4dExpbmVzID0gbGluZXMuc2xpY2UoMik7XG5cdFx0XHRsZXQgdGV4dCA9IHRleHRMaW5lcy5qb2luKCcgJyk7XG5cdFx0XHRcblx0XHRcdC8vIFZlcmlmaWNhIHNlIHRlbW9zIG3Dumx0aXBsb3MgaMOtZmVucyBpbmRpY2FuZG8gZGnDoWxvZ29zXG5cdFx0XHQvLyBQcmltZWlybyBjYXNvOiB0ZXh0byBjb21lw6dhIGNvbSBow61mZW4gZSBjb250w6ltIG91dHJvIGjDrWZlbiBwcmVjZWRpZG8gcG9yIGVzcGHDp29cblx0XHRcdGlmICh0ZXh0Lm1hdGNoKC9eLS4qXFxzKy0vKSkge1xuXHRcdFx0XHQvLyBTdWJzdGl0dWkgdG9kb3Mgb3MgaMOtZmVucyAoZXhjZXRvIG8gcHJpbWVpcm8pIHBvciBxdWVicmEgZGUgbGluaGEgZSBow61mZW5cblx0XHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZSgvXi0vLCAnLSAnKS5yZXBsYWNlKC9cXHMrLS9nLCAnXFxuLScpO1xuXHRcdFx0fSBcblx0XHRcdC8vIFNlZ3VuZG8gY2FzbzogdGV4dG8gbsOjbyBjb21lw6dhIGNvbSBow61mZW4gbWFzIGNvbnTDqW0gbcO6bHRpcGxvcyBow61mZW5zIGNvbSBlc3Bhw6dvc1xuXHRcdFx0ZWxzZSBpZiAodGV4dC5tYXRjaCgvXFxzKy0uKlxccystLykpIHtcblx0XHRcdFx0Ly8gU3Vic3RpdHVpIHRvZG9zIG9zIGjDrWZlbnMgcG9yIHF1ZWJyYSBkZSBsaW5oYSBlIGjDrWZlblxuXHRcdFx0XHR0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cXHMrLS9nLCAnXFxuLScpO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0XHQvLyBTZSBvIHRleHRvIGFjYWJvdSBlbSB1bSBmb3JtYXRvIG7Do28gZGVzZWphZG8sIGNvcnJpZ2Vcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoL15cXHMqLVxccyovZywgJy0nKTtcblx0XHRcdFxuXHRcdFx0Ly8gUmVjb25zdHLDs2kgbyBibG9jb1xuXHRcdFx0cmV0dXJuIGAke251bWJlcn1cXG4ke3RpbWVzdGFtcH1cXG4ke3RleHR9YDtcblx0XHR9XG5cdFx0XG5cdFx0cmV0dXJuIGJsb2NrO1xuXHR9KS5qb2luKCdcXG5cXG4nKTtcbn07XG5cbmNvbnN0IHRyaWdnZXJGaWxlRG93bmxvYWQgPSAoZmlsZW5hbWU6IHN0cmluZywgY29udGVudDogc3RyaW5nKSA9PiB7XG5cdGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcblx0Y29uc3QgZmlsZSA9IG5ldyBCbG9iKFtjb250ZW50XSwgeyB0eXBlOiBcInRleHQvcGxhaW5cIiB9KTtcblx0ZWxlbWVudC5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKTtcblx0ZWxlbWVudC5kb3dubG9hZCA9IGZpbGVuYW1lO1xuXHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuXHRlbGVtZW50LmNsaWNrKCk7XG5cdFxuXHQvLyBMaW1wYSBvIGVsZW1lbnRvIGRvIERPTSBhcMOzcyBvIGRvd25sb2FkXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZWxlbWVudCk7XG5cdFx0VVJMLnJldm9rZU9iamVjdFVSTChlbGVtZW50LmhyZWYpO1xuXHR9LCAxMDApO1xufTtcblxuZnVuY3Rpb24gVHJhbnNsYXRpbmcoeyBjaHVua3MgfTogeyBjaHVua3M6IENodW5rW10gfSkge1xuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPVwiZmxleCBnYXAteS0yIGZsZXgtY29sLXJldmVyc2VcIj5cblx0XHRcdHtjaHVua3MubWFwKChjaHVuaykgPT4gKFxuXHRcdFx0XHQ8VGltZXN0YW1wIGtleT17YCR7Y2h1bmsuaW5kZXh9LSR7Y2h1bmsuc3RhcnR9YH0gey4uLmNodW5rfSAvPlxuXHRcdFx0KSl9XG5cdFx0PC9kaXY+XG5cdCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XG5cdGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSBSZWFjdC51c2VTdGF0ZTxcImlkbGVcIiB8IFwiYnVzeVwiIHwgXCJkb25lXCI+KFwiaWRsZVwiKTtcblx0Y29uc3QgW3RyYW5zbGF0ZWRTcnQsIHNldFRyYW5zbGF0ZWRTcnRdID0gUmVhY3QudXNlU3RhdGUoXCJcIik7XG5cdGNvbnN0IFt0cmFuc2xhdGVkQ2h1bmtzLCBzZXRUcmFuc2xhdGVkQ2h1bmtzXSA9IFJlYWN0LnVzZVN0YXRlPENodW5rW10+KFtdKTtcblx0Y29uc3QgW29yaWdpbmFsQ2h1bmtzLCBzZXRPcmlnaW5hbENodW5rc10gPSBSZWFjdC51c2VTdGF0ZTxDaHVua1tdPihbXSk7XG5cdGNvbnN0IFtwcm9jZXNzZWRGaWxlcywgc2V0UHJvY2Vzc2VkRmlsZXNdID0gUmVhY3QudXNlU3RhdGU8c3RyaW5nW10+KFtdKTtcblx0Y29uc3QgW2N1cnJlbnRGaWxlTmFtZSwgc2V0Q3VycmVudEZpbGVOYW1lXSA9IFJlYWN0LnVzZVN0YXRlPHN0cmluZz4oXCJcIik7XG5cdGNvbnN0IFthcGlLZXksIHNldEFwaUtleV0gPSBSZWFjdC51c2VTdGF0ZTxzdHJpbmc+KCgpID0+IHtcblx0XHQvLyBUZW50YXIgb2J0ZXIgYSBjaGF2ZSBkZSBBUEkgZG8gbG9jYWxTdG9yYWdlIG91IHVzYXIgdW1hIGNoYXZlIHBhZHLDo28gdmF6aWFcblx0XHRpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZ2VtaW5pX2FwaV9rZXknKSB8fCAnJztcblx0XHR9XG5cdFx0cmV0dXJuICcnO1xuXHR9KTtcblx0Y29uc3QgW2FwaUVycm9yLCBzZXRBcGlFcnJvcl0gPSBSZWFjdC51c2VTdGF0ZTxzdHJpbmc+KFwiXCIpO1xuXG5cdC8vIEZ1bsOnw6NvIHBhcmEgdmVyaWZpY2FyIHNlIG8gYXJxdWl2byBqw6EgdGVtIHVtYSB2ZXJzw6NvIHRyYWR1emlkYVxuXHRjb25zdCBpc0FscmVhZHlUcmFuc2xhdGVkID0gKGZpbGVOYW1lOiBzdHJpbmcpOiBib29sZWFuID0+IHtcblx0XHRjb25zdCBmaWxlTmFtZVdpdGhvdXRFeHQgPSBmaWxlTmFtZS5yZXBsYWNlKC9cXC5zcnQkL2ksICcnKTtcblx0XHRjb25zdCB0cmFuc2xhdGVkRmlsZU5hbWUgPSBgJHtmaWxlTmFtZVdpdGhvdXRFeHR9LnB0LnNydGA7XG5cdFx0XG5cdFx0Ly8gVmVyaWZpY2Egc2UgbyBhcnF1aXZvIGrDoSBlc3TDoSBuYSBsaXN0YSBkZSBwcm9jZXNzYWRvc1xuXHRcdHJldHVybiBwcm9jZXNzZWRGaWxlcy5pbmNsdWRlcyhmaWxlTmFtZSkgfHwgcHJvY2Vzc2VkRmlsZXMuaW5jbHVkZXModHJhbnNsYXRlZEZpbGVOYW1lKTtcblx0fTtcblxuXHRhc3luYyBmdW5jdGlvbiBoYW5kbGVTdHJlYW0ocmVzcG9uc2U6IFJlc3BvbnNlKSB7XG5cdFx0Y29uc3QgZGF0YSA9IHJlc3BvbnNlLmJvZHk7XG5cdFx0aWYgKCFkYXRhKSByZXR1cm47XG5cblx0XHRsZXQgY29udGVudCA9IFwiXCI7XG5cdFx0bGV0IGRvbmVSZWFkaW5nID0gZmFsc2U7XG5cdFx0Y29uc3QgcmVhZGVyID0gZGF0YS5nZXRSZWFkZXIoKTtcblx0XHRjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG5cblx0XHR3aGlsZSAoIWRvbmVSZWFkaW5nKSB7XG5cdFx0XHRjb25zdCB7IHZhbHVlLCBkb25lIH0gPSBhd2FpdCByZWFkZXIucmVhZCgpO1xuXHRcdFx0ZG9uZVJlYWRpbmcgPSBkb25lO1xuXHRcdFx0Y29uc3QgY2h1bmsgPSBkZWNvZGVyLmRlY29kZSh2YWx1ZSk7XG5cblx0XHRcdGNvbnRlbnQgKz0gYCR7Y2h1bmt9XFxuXFxuYDtcblx0XHRcdHNldFRyYW5zbGF0ZWRTcnQoKHByZXYpID0+IHByZXYgKyBjaHVuayk7XG5cdFx0XHRpZiAoY2h1bmsudHJpbSgpLmxlbmd0aClcblx0XHRcdFx0c2V0VHJhbnNsYXRlZENodW5rcygocHJldikgPT4gWy4uLnByZXYsIHBhcnNlQ2h1bmsoY2h1bmspXSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cblx0XHRmdW5jdGlvbiBwYXJzZUNodW5rKGNodW5rU3RyOiBzdHJpbmcpOiBDaHVuayB7XG5cdFx0XHRjb25zdCB7IGlkLCB0aW1lc3RhbXAsIHRleHQgfSA9IHBhcnNlU2VnbWVudChjaHVua1N0cik7XG5cdFx0XHRjb25zdCB7IHN0YXJ0LCBlbmQgfSA9IHBhcnNlVGltZXN0YW1wKHRpbWVzdGFtcCk7XG5cdFx0XHRyZXR1cm4geyBpbmRleDogaWQudG9TdHJpbmcoKSwgc3RhcnQsIGVuZCwgdGV4dCB9O1xuXHRcdH1cblx0fVxuXG5cdGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdChjb250ZW50OiBzdHJpbmcsIGxhbmd1YWdlOiBzdHJpbmcsIGZpbGVOYW1lOiBzdHJpbmcpIHtcblx0XHR0cnkge1xuXHRcdFx0aWYgKCFjb250ZW50KSB7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoXCJObyBjb250ZW50IHByb3ZpZGVkXCIpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHNldFN0YXR1cyhcImJ1c3lcIik7XG5cdFx0XHRzZXRDdXJyZW50RmlsZU5hbWUoZmlsZU5hbWUpO1xuXHRcdFx0Ly8gUmVzZXQgcHJldmlvdXMgc3RhdGVcblx0XHRcdHNldFRyYW5zbGF0ZWRTcnQoXCJcIik7XG5cdFx0XHRzZXRUcmFuc2xhdGVkQ2h1bmtzKFtdKTtcblx0XHRcdHNldE9yaWdpbmFsQ2h1bmtzKFtdKTtcblxuXHRcdFx0Y29uc3Qgc2VnbWVudHMgPSBjb250ZW50LnNwbGl0KC9cXHJcXG5cXHJcXG58XFxuXFxuLykuZmlsdGVyKChzZWdtZW50KSA9PiB7XG5cdFx0XHRcdGNvbnN0IGxpbmVzID0gc2VnbWVudC5zcGxpdCgvXFxyXFxufFxcbi8pO1xuXHRcdFx0XHRjb25zdCBpZCA9IE51bWJlci5wYXJzZUludChsaW5lc1swXSwgMTApO1xuXHRcdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHRcdGxpbmVzLmxlbmd0aCA+PSAzICYmIC8vIE11c3QgaGF2ZSBhdCBsZWFzdCBpZCwgdGltZXN0YW1wLCBhbmQgdGV4dFxuXHRcdFx0XHRcdCFOdW1iZXIuaXNOYU4oaWQpICYmIC8vIEZpcnN0IGxpbmUgbXVzdCBiZSBhIG51bWJlclxuXHRcdFx0XHRcdGxpbmVzWzFdLmluY2x1ZGVzKFwiIC0tPiBcIilcblx0XHRcdFx0KTsgLy8gU2Vjb25kIGxpbmUgbXVzdCBiZSBhIHRpbWVzdGFtcFxuXHRcdFx0fSk7XG5cblx0XHRcdGlmICghc2VnbWVudHMubGVuZ3RoKSB7XG5cdFx0XHRcdHNldFN0YXR1cyhcImlkbGVcIik7XG5cdFx0XHRcdGFsZXJ0KFwiSW52YWxpZCBTUlQgZmlsZSBmb3JtYXQuIFBsZWFzZSBjaGVjayB5b3VyIGZpbGUuXCIpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbnN0IG9yaWdpbmFsU2VnbWVudHMgPSBzZWdtZW50cy5tYXAocGFyc2VTZWdtZW50KTtcblx0XHRcdFx0c2V0T3JpZ2luYWxDaHVua3MoXG5cdFx0XHRcdFx0b3JpZ2luYWxTZWdtZW50cy5tYXAoKHNlZykgPT4gKHtcblx0XHRcdFx0XHRcdGluZGV4OiBzZWcuaWQudG9TdHJpbmcoKSxcblx0XHRcdFx0XHRcdHN0YXJ0OiBzZWcudGltZXN0YW1wLnNwbGl0KFwiIC0tPiBcIilbMF0sXG5cdFx0XHRcdFx0XHRlbmQ6IHNlZy50aW1lc3RhbXAuc3BsaXQoXCIgLS0+IFwiKVsxXSxcblx0XHRcdFx0XHRcdHRleHQ6IHNlZy50ZXh0LFxuXHRcdFx0XHRcdH0pKSxcblx0XHRcdFx0KTtcblx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRcdHNldFN0YXR1cyhcImlkbGVcIik7XG5cdFx0XHRcdGFsZXJ0KFwiRXJyb3IgcGFyc2luZyBTUlQgZmlsZS4gUGxlYXNlIGNoZWNrIHRoZSBmaWxlIGZvcm1hdC5cIik7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoXCJQYXJzaW5nIGVycm9yOlwiLCBlcnJvcik7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTGltcGFyIHF1YWxxdWVyIGVycm8gYW50ZXJpb3Jcblx0XHRcdHNldEFwaUVycm9yKFwiXCIpO1xuXHRcdFx0XG5cdFx0XHRjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiL2FwaVwiLCB7XG5cdFx0XHRcdG1ldGhvZDogXCJQT1NUXCIsXG5cdFx0XHRcdGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgY29udGVudCwgbGFuZ3VhZ2UsIGFwaUtleSB9KSxcblx0XHRcdFx0aGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuXHRcdFx0fSk7XG5cblx0XHRcdGlmIChyZXNwb25zZS5vaykge1xuXHRcdFx0XHRjb25zdCBjb250ZW50ID0gYXdhaXQgaGFuZGxlU3RyZWFtKHJlc3BvbnNlKTtcblx0XHRcdFx0Ly8gR2VyYSBvIG5vbWUgZG8gYXJxdWl2byBubyBmb3JtYXRvIG9yaWdpbmFsLnB0LnNydFxuXHRcdFx0XHRjb25zdCBmaWxlTmFtZVdpdGhvdXRFeHQgPSBmaWxlTmFtZS5yZXBsYWNlKC9cXC5zcnQkL2ksICcnKTtcblx0XHRcdFx0Y29uc3QgZmlsZW5hbWUgPSBgJHtmaWxlTmFtZVdpdGhvdXRFeHR9LnB0LnNydGA7XG5cdFx0XHRcdFxuXHRcdFx0XHRpZiAoY29udGVudCkge1xuXHRcdFx0XHRcdC8vIEFwbGljYSBvIHDDs3MtcHJvY2Vzc2FtZW50byBwYXJhIGNvcnJpZ2lyIG8gZm9ybWF0byBkYXMgbGVnZW5kYXNcblx0XHRcdFx0XHRjb25zdCBwcm9jZXNzZWRDb250ZW50ID0gcHJvY2Vzc1N1YnRpdGxlRm9ybWF0KGNvbnRlbnQpO1xuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdHNldFN0YXR1cyhcImRvbmVcIik7XG5cdFx0XHRcdFx0dHJpZ2dlckZpbGVEb3dubG9hZChmaWxlbmFtZSwgcHJvY2Vzc2VkQ29udGVudCk7XG5cdFx0XHRcdFx0Ly8gQWRpY2lvbmEgbyBhcnF1aXZvIMOgIGxpc3RhIGRlIHByb2Nlc3NhZG9zXG5cdFx0XHRcdFx0c2V0UHJvY2Vzc2VkRmlsZXMocHJldiA9PiBbLi4ucHJldiwgZmlsZU5hbWVdKTtcblx0XHRcdFx0XHRcblx0XHRcdFx0XHQvLyBBZ3VhcmRhIHVtIGJyZXZlIG1vbWVudG8gYW50ZXMgZGUgcHJvY2Vzc2FyIG8gcHLDs3hpbW8gYXJxdWl2b1xuXHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0XHRcdFx0Ly8gVmVyaWZpY2Egc2UgZXhpc3RlIHVtIGZvcm11bMOhcmlvIGUgZGlzcGFyYSBvIGV2ZW50byBzdWJtaXRcblx0XHRcdFx0XHRcdGNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdmb3JtJyk7XG5cdFx0XHRcdFx0XHRpZiAoZm9ybSkge1xuXHRcdFx0XHRcdFx0XHRmb3JtLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdzdWJtaXQnLCB7IGNhbmNlbGFibGU6IHRydWUsIGJ1YmJsZXM6IHRydWUgfSkpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0c2V0U3RhdHVzKFwiaWRsZVwiKTtcblx0XHRcdFx0XHR9LCAxMDAwKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZXRTdGF0dXMoXCJpZGxlXCIpO1xuXHRcdFx0XHRcdGFsZXJ0KFwiRXJyb3Igb2NjdXJyZWQgd2hpbGUgcmVhZGluZyB0aGUgZmlsZVwiKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0c2V0U3RhdHVzKFwiaWRsZVwiKTtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUZW50YXIgb2J0ZXIgbyBlcnJvIGRhIHJlc3Bvc3RhXG5cdFx0XHRcdFx0Y29uc3QgZXJyb3JEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXHRcdFx0XHRcdHNldEFwaUVycm9yKGVycm9yRGF0YS5lcnJvciB8fCBcIkVycm8gYW8gZW52aWFyIGEgc29saWNpdGHDp8OjbyBkZSB0cmFkdcOnw6NvXCIpO1xuXHRcdFx0XHRcdGNvbnNvbGUuZXJyb3IoXCJBUEkgZXJyb3I6XCIsIGVycm9yRGF0YSk7XG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHtcblx0XHRcdFx0XHRzZXRBcGlFcnJvcihcIkVycm8gYW8gZW52aWFyIGEgc29saWNpdGHDp8OjbyBkZSB0cmFkdcOnw6NvXCIpO1xuXHRcdFx0XHRcdGNvbnNvbGUuZXJyb3IoXCJFcnJvciBvY2N1cnJlZCB3aGlsZSBzdWJtaXR0aW5nIHRoZSB0cmFuc2xhdGlvbiByZXF1ZXN0XCIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdHNldFN0YXR1cyhcImlkbGVcIik7XG5cdFx0XHRzZXRBcGlFcnJvcihlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFwiRXJybyBkdXJhbnRlIGEgbGVpdHVyYSBkbyBhcnF1aXZvIGUgc29saWNpdGHDp8OjbyBkZSB0cmFkdcOnw6NvXCIpO1xuXHRcdFx0Y29uc29sZS5lcnJvcihcblx0XHRcdFx0XCJFcnJvciBkdXJpbmcgZmlsZSByZWFkaW5nIGFuZCB0cmFuc2xhdGlvbiByZXF1ZXN0OlwiLFxuXHRcdFx0XHRlcnJvcixcblx0XHRcdCk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIChcblx0XHQ8bWFpblxuXHRcdFx0Y2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuXHRcdFx0XHRcIm1heC13LTJ4bCBmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlciBteC1hdXRvXCIsXG5cdFx0XHRcdGxpYnJlLmNsYXNzTmFtZSxcblx0XHRcdCl9XG5cdFx0PlxuXHRcdFx0e3N0YXR1cyA9PT0gXCJpZGxlXCIgJiYgKFxuXHRcdFx0XHQ8PlxuXHRcdFx0XHRcdDxoMVxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuXHRcdFx0XHRcdFx0XHRcInB4LTQgdGV4dC0zeGwgbWQ6dGV4dC01eGwgdGV4dC1jZW50ZXIgZm9udC1ib2xkIG15LTZcIixcblx0XHRcdFx0XHRcdFx0cm9hbGREYWhsLmNsYXNzTmFtZSxcblx0XHRcdFx0XHRcdCl9XG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0VHJhZHV0b3IgZGUgTGVnZW5kYXMgU1JUIHBhcmEgUG9ydHVndcOqcyBCcmFzaWxlaXJvXG5cdFx0XHRcdFx0PC9oMT5cblx0XHRcdFx0XHQ8Rm9ybSBcblx0XHRcdFx0XHRcdG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9IFxuXHRcdFx0XHRcdFx0YXBpS2V5PXthcGlLZXl9XG5cdFx0XHRcdFx0XHRvbkFwaUtleUNoYW5nZT17c2V0QXBpS2V5fVxuXHRcdFx0XHRcdFx0YXBpRXJyb3I9e2FwaUVycm9yfVxuXHRcdFx0XHRcdC8+XG5cdFx0XHRcdDwvPlxuXHRcdFx0KX1cblx0XHRcdHtzdGF0dXMgPT09IFwiYnVzeVwiICYmIChcblx0XHRcdFx0PD5cblx0XHRcdFx0XHQ8aDFcblx0XHRcdFx0XHRcdGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcblx0XHRcdFx0XHRcdFx0XCJweC00IHRleHQtM3hsIG1kOnRleHQtNXhsIHRleHQtY2VudGVyIGZvbnQtYm9sZCBteS02XCIsXG5cdFx0XHRcdFx0XHRcdHJvYWxkRGFobC5jbGFzc05hbWUsXG5cdFx0XHRcdFx0XHQpfVxuXHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdFRyYWR1emluZG8maGVsbGlwO1xuXHRcdFx0XHRcdDwvaDE+XG5cdFx0XHRcdFx0PHA+KE8gYXJxdWl2byBzZXLDoSBiYWl4YWRvIGF1dG9tYXRpY2FtZW50ZSBxdWFuZG8gZXN0aXZlciBwcm9udG8pPC9wPlxuXHRcdFx0XHRcdDxUcmFuc2xhdGluZ1xuXHRcdFx0XHRcdFx0Y2h1bmtzPXt0cmFuc2xhdGVkQ2h1bmtzLm1hcCgoY2h1bmssIGkpID0+ICh7XG5cdFx0XHRcdFx0XHRcdC4uLmNodW5rLFxuXHRcdFx0XHRcdFx0XHRvcmlnaW5hbFRleHQ6IG9yaWdpbmFsQ2h1bmtzW2ldPy50ZXh0LFxuXHRcdFx0XHRcdFx0fSkpfVxuXHRcdFx0XHRcdC8+XG5cdFx0XHRcdDwvPlxuXHRcdFx0KX1cblx0XHRcdHtzdGF0dXMgPT09IFwiZG9uZVwiICYmIChcblx0XHRcdFx0PD5cblx0XHRcdFx0XHQ8aDFcblx0XHRcdFx0XHRcdGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcblx0XHRcdFx0XHRcdFx0XCJweC00IHRleHQtM3hsIG1kOnRleHQtNXhsIHRleHQtY2VudGVyIGZvbnQtYm9sZCBteS02XCIsXG5cdFx0XHRcdFx0XHRcdHJvYWxkRGFobC5jbGFzc05hbWUsXG5cdFx0XHRcdFx0XHQpfVxuXHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdFRyYWR1w6fDo28gY29uY2x1w61kYSFcblx0XHRcdFx0XHQ8L2gxPlxuXHRcdFx0XHRcdDxwPkFycXVpdm8gdHJhZHV6aWRvIGUgc2Fsdm8hIPCfjb88L3A+XG5cdFx0XHRcdFx0PHAgY2xhc3NOYW1lPVwibXQtNCB0ZXh0LVsjNDQ0NDQ0XVwiPlxuXHRcdFx0XHRcdFx0QXJxdWl2byBzYWx2byBjb21vIHtjdXJyZW50RmlsZU5hbWUucmVwbGFjZSgvXFwuc3J0JC9pLCAnJyl9LnB0LnNydFxuXHRcdFx0XHRcdDwvcD5cblx0XHRcdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdFx0XHRvbkNsaWNrPXsoKSA9PiBzZXRTdGF0dXMoXCJpZGxlXCIpfVxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lPVwiYmctWyM0NDQ0NDRdIGhvdmVyOmJnLVsjM2EzYTNhXSB0ZXh0LXdoaXRlIG10LTYgZm9udC1ib2xkIHB5LTIgcHgtNiByb3VuZGVkLWxnXCJcblx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRDb250aW51YXIgdHJhZHV6aW5kb1xuXHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHQ8Lz5cblx0XHRcdCl9XG5cdFx0PC9tYWluPlxuXHQpO1xufVxuIl0sIm5hbWVzIjpbImxpYnJlIiwicm9hbGREYWhsIiwiUmVhY3QiLCJGb3JtIiwiVGltZXN0YW1wIiwicGFyc2VTZWdtZW50IiwicGFyc2VUaW1lc3RhbXAiLCJjbGFzc05hbWVzIiwiY2xhc3NlcyIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwicHJvY2Vzc1N1YnRpdGxlRm9ybWF0IiwiY29udGVudCIsImJsb2NrcyIsInNwbGl0IiwibWFwIiwiYmxvY2siLCJsaW5lcyIsImxlbmd0aCIsIm51bWJlciIsInRpbWVzdGFtcCIsInRleHRMaW5lcyIsInNsaWNlIiwidGV4dCIsIm1hdGNoIiwicmVwbGFjZSIsInRyaWdnZXJGaWxlRG93bmxvYWQiLCJmaWxlbmFtZSIsImVsZW1lbnQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJmaWxlIiwiQmxvYiIsInR5cGUiLCJocmVmIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiZG93bmxvYWQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjbGljayIsInNldFRpbWVvdXQiLCJyZW1vdmVDaGlsZCIsInJldm9rZU9iamVjdFVSTCIsIlRyYW5zbGF0aW5nIiwiY2h1bmtzIiwiZGl2IiwiY2xhc3NOYW1lIiwiY2h1bmsiLCJpbmRleCIsInN0YXJ0IiwiSG9tZSIsInN0YXR1cyIsInNldFN0YXR1cyIsInVzZVN0YXRlIiwidHJhbnNsYXRlZFNydCIsInNldFRyYW5zbGF0ZWRTcnQiLCJ0cmFuc2xhdGVkQ2h1bmtzIiwic2V0VHJhbnNsYXRlZENodW5rcyIsIm9yaWdpbmFsQ2h1bmtzIiwic2V0T3JpZ2luYWxDaHVua3MiLCJwcm9jZXNzZWRGaWxlcyIsInNldFByb2Nlc3NlZEZpbGVzIiwiY3VycmVudEZpbGVOYW1lIiwic2V0Q3VycmVudEZpbGVOYW1lIiwiYXBpS2V5Iiwic2V0QXBpS2V5IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImFwaUVycm9yIiwic2V0QXBpRXJyb3IiLCJpc0FscmVhZHlUcmFuc2xhdGVkIiwiZmlsZU5hbWUiLCJmaWxlTmFtZVdpdGhvdXRFeHQiLCJ0cmFuc2xhdGVkRmlsZU5hbWUiLCJpbmNsdWRlcyIsImhhbmRsZVN0cmVhbSIsInJlc3BvbnNlIiwiZGF0YSIsImRvbmVSZWFkaW5nIiwicmVhZGVyIiwiZ2V0UmVhZGVyIiwiZGVjb2RlciIsIlRleHREZWNvZGVyIiwidmFsdWUiLCJkb25lIiwicmVhZCIsImRlY29kZSIsInByZXYiLCJ0cmltIiwicGFyc2VDaHVuayIsImNodW5rU3RyIiwiaWQiLCJlbmQiLCJ0b1N0cmluZyIsImhhbmRsZVN1Ym1pdCIsImxhbmd1YWdlIiwiY29uc29sZSIsImVycm9yIiwic2VnbWVudHMiLCJzZWdtZW50IiwiTnVtYmVyIiwicGFyc2VJbnQiLCJpc05hTiIsImFsZXJ0Iiwib3JpZ2luYWxTZWdtZW50cyIsInNlZyIsImZldGNoIiwibWV0aG9kIiwiSlNPTiIsInN0cmluZ2lmeSIsImhlYWRlcnMiLCJvayIsInByb2Nlc3NlZENvbnRlbnQiLCJmb3JtIiwicXVlcnlTZWxlY3RvciIsImRpc3BhdGNoRXZlbnQiLCJFdmVudCIsImNhbmNlbGFibGUiLCJidWJibGVzIiwiZXJyb3JEYXRhIiwianNvbiIsImUiLCJFcnJvciIsIm1lc3NhZ2UiLCJtYWluIiwiaDEiLCJvblN1Ym1pdCIsIm9uQXBpS2V5Q2hhbmdlIiwicCIsImkiLCJvcmlnaW5hbFRleHQiLCJidXR0b24iLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/Form.tsx":
/*!*****************************!*\
  !*** ./components/Form.tsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction classNames() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    return classes.filter(Boolean).join(\" \");\n}\n// Limitando apenas para Português Brasileiro\nconst LANGUAGES = [\n    \"Brazilian Portuguese\"\n];\n// Função para ler o conteúdo do arquivo\nconst readFileContents = async (file)=>{\n    return new Promise((resolve, reject)=>{\n        var _window_electron;\n        // Verificar se estamos no Electron e se o arquivo tem um caminho\n        if ( true && ((_window_electron = window.electron) === null || _window_electron === void 0 ? void 0 : _window_electron.readSrtFile) && \"path\" in file) {\n            // Usar a API do Electron para ler o arquivo\n            window.electron.readSrtFile(file.path).then((result)=>{\n                if (result.success) {\n                    resolve(result.content);\n                } else {\n                    reject(new Error(result.error || \"Erro ao ler arquivo\"));\n                }\n            }).catch(reject);\n        } else {\n            // Usar a API padrão do navegador\n            const reader = new FileReader();\n            reader.onload = (e)=>{\n                var _e_target;\n                const content = (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result;\n                resolve(content);\n            };\n            reader.onerror = (e)=>{\n                reject(e);\n            };\n            reader.readAsText(file);\n        }\n    });\n};\nconst SrtForm = (param)=>{\n    let { onSubmit, apiKey = \"\", onApiKeyChange, apiError } = param;\n    _s();\n    const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Preseleciona o idioma como Brazilian Portuguese\n    const [language, setLanguage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Brazilian Portuguese\");\n    const [dragging, setDragging] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentFileIndex, setCurrentFileIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);\n    const [localApiKey, setLocalApiKey] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(apiKey);\n    const [isElectron, setIsElectron] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Verifica se estamos no ambiente Electron\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _window_electron;\n        if ( true && ((_window_electron = window.electron) === null || _window_electron === void 0 ? void 0 : _window_electron.isElectronApp)) {\n            setIsElectron(true);\n            console.log(\"Executando no ambiente Electron\");\n            // Configura o listener para seleção de arquivos no Electron\n            window.electron.onFileSelection((filePaths)=>{\n                console.log(\"Arquivos selecionados no Electron:\", filePaths);\n                // Converte os caminhos de arquivo em objetos File\n                const newFiles = filePaths.map((path)=>{\n                    const pathParts = path.split(/[\\/\\\\]/);\n                    const fileName = pathParts[pathParts.length - 1];\n                    // No Electron, usamos um objeto similar a File\n                    return {\n                        file: {\n                            name: fileName,\n                            path: path,\n                            // Estas propriedades são usadas apenas para compatibilidade\n                            size: 0,\n                            type: \"text/plain\"\n                        },\n                        translated: false\n                    };\n                });\n                setFiles((prevFiles)=>[\n                        ...prevFiles,\n                        ...newFiles\n                    ]);\n            });\n        }\n    }, []);\n    // Atualiza o estado local quando a prop apiKey mudar\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(()=>{\n        setLocalApiKey(apiKey);\n    }, [\n        apiKey\n    ]);\n    // Função para lidar com mudanças na chave de API\n    const handleApiKeyChange = (e)=>{\n        const newKey = e.target.value;\n        setLocalApiKey(newKey);\n        // Se houver uma função de callback para mudanças na API key, chame-a\n        if (onApiKeyChange) {\n            onApiKeyChange(newKey);\n        }\n        // Salva a nova chave no localStorage\n        if (true) {\n            localStorage.setItem(\"gemini_api_key\", newKey);\n        }\n    };\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if (files.length > 0 && language) {\n            // Encontra o próximo arquivo não traduzido\n            const nextIndex = files.findIndex((f)=>!f.translated);\n            if (nextIndex !== -1) {\n                var _window_electron;\n                setCurrentFileIndex(nextIndex);\n                const fileToTranslate = files[nextIndex];\n                // Marca o arquivo como em processamento\n                const updatedFiles = [\n                    ...files\n                ];\n                updatedFiles[nextIndex].translated = true;\n                setFiles(updatedFiles);\n                // Lê o conteúdo do arquivo\n                let content;\n                try {\n                    content = await readFileContents(fileToTranslate.file);\n                } catch (error) {\n                    console.error(\"Erro ao ler arquivo:\", error);\n                    alert(\"Erro ao ler arquivo: \".concat(error instanceof Error ? error.message : \"Erro desconhecido\"));\n                    return;\n                }\n                // Se estamos no Electron e temos uma API de tradução disponível, usamos ela\n                if (isElectron && ((_window_electron = window.electron) === null || _window_electron === void 0 ? void 0 : _window_electron.translateText)) {\n                    try {\n                        const result = await window.electron.translateText(content, language, localApiKey);\n                        if (result.error) {\n                            // Mostramos o erro ao usuário\n                            alert(\"Erro na tradu\\xe7\\xe3o: \".concat(result.error));\n                        } else {\n                            // Processamos o resultado da tradução\n                            console.log(\"Tradu\\xe7\\xe3o realizada com sucesso via Electron\");\n                            // Aqui poderiamos processar o resultado e salvar o arquivo\n                            alert(\"Tradu\\xe7\\xe3o conclu\\xedda com sucesso!\");\n                        }\n                    } catch (error) {\n                        console.error(\"Erro ao traduzir no Electron:\", error);\n                        alert(\"Erro ao traduzir: \".concat(error instanceof Error ? error.message : \"Erro desconhecido\"));\n                    }\n                } else {\n                    // Processamento normal via web\n                    onSubmit(content, language, fileToTranslate.file.name);\n                }\n            }\n        }\n    };\n    const handleDrop = (e)=>{\n        e.preventDefault();\n        setDragging(false);\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            const droppedFiles = Array.from(e.dataTransfer.files);\n            // Filtra apenas arquivos .srt\n            const srtFiles = droppedFiles.filter((file)=>{\n                var _fileName_split_pop;\n                const fileName = file.name;\n                const fileExtension = (_fileName_split_pop = fileName.split(\".\").pop()) === null || _fileName_split_pop === void 0 ? void 0 : _fileName_split_pop.toLowerCase();\n                return fileExtension === \"srt\";\n            });\n            if (srtFiles.length === 0) {\n                alert(\"Por favor, selecione apenas arquivos .srt\");\n                return;\n            }\n            // Adiciona os novos arquivos à lista\n            const newFiles = srtFiles.map((file)=>({\n                    file,\n                    translated: false\n                }));\n            setFiles((prev)=>[\n                    ...prev,\n                    ...newFiles\n                ]);\n        }\n    };\n    const handleFileChange = (e)=>{\n        if (e.target.files && e.target.files.length > 0) {\n            const selectedFiles = Array.from(e.target.files);\n            // Filtra apenas arquivos .srt\n            const srtFiles = selectedFiles.filter((file)=>{\n                var _fileName_split_pop;\n                const fileName = file.name;\n                const fileExtension = (_fileName_split_pop = fileName.split(\".\").pop()) === null || _fileName_split_pop === void 0 ? void 0 : _fileName_split_pop.toLowerCase();\n                return fileExtension === \"srt\";\n            });\n            if (srtFiles.length === 0) {\n                alert(\"Por favor, selecione apenas arquivos .srt\");\n                return;\n            }\n            // Adiciona os novos arquivos à lista\n            const newFiles = srtFiles.map((file)=>({\n                    file,\n                    translated: false\n                }));\n            setFiles((prev)=>[\n                    ...prev,\n                    ...newFiles\n                ]);\n        }\n    };\n    // Função para abrir o diálogo de seleção de arquivos no Electron\n    const handleOpenElectronFileDialog = ()=>{\n        var _window_electron;\n        if (isElectron && ((_window_electron = window.electron) === null || _window_electron === void 0 ? void 0 : _window_electron.openFileDialog)) {\n            window.electron.openFileDialog();\n        }\n    };\n    const removeFile = (index)=>{\n        const updatedFiles = [\n            ...files\n        ];\n        updatedFiles.splice(index, 1);\n        setFiles(updatedFiles);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex flex-col px-4 mt-6 w-full md:px-0\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                htmlFor: \"srt-file\",\n                className: \"block font-bold py-4 md:pl-8 text-lg text-[#444444]\",\n                children: [\n                    files.length > 0 ? \"✅\" : \"\\uD83D\\uDC49\",\n                    \" Passo 1: Escolha seus arquivos de legendas SRT\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                lineNumber: 254,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"srt-file\",\n                onDragOver: (e)=>{\n                    e.preventDefault();\n                    setDragging(true);\n                },\n                onDragLeave: ()=>setDragging(false),\n                onDrop: handleDrop,\n                className: \"w-full border-2 \".concat(dragging ? \"border-blue-300\" : \"border-transparent\", \" md:rounded-lg bg-[#EFEFEF] px-12 relative\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"file\",\n                        accept: \".srt\",\n                        multiple: true,\n                        onChange: handleFileChange,\n                        className: \"absolute inset-0 opacity-0 cursor-pointer z-10\",\n                        style: {\n                            pointerEvents: files.length > 0 ? \"none\" : \"auto\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                        lineNumber: 271,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid items-center py-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-center py-4 md:py-0 text-[#444444]\",\n                                children: files.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-left\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2 font-bold flex justify-between items-center\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: \"Arquivos selecionados:\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                    lineNumber: 285,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    type: \"button\",\n                                                    onClick: isElectron ? handleOpenElectronFileDialog : ()=>{\n                                                        var _document_querySelector;\n                                                        return (_document_querySelector = document.querySelector('input[type=\"file\"]')) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.click();\n                                                    },\n                                                    className: \"text-blue-500 hover:text-blue-700 text-sm px-2 py-1 border border-blue-500 rounded\",\n                                                    children: \"+ Adicionar mais\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                    lineNumber: 286,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                            lineNumber: 284,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        files.map((file, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex items-center justify-between mb-1\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        children: [\n                                                            file.translated ? \"✅\" : \"⏳\",\n                                                            \" \",\n                                                            file.file.name\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                        lineNumber: 296,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                        type: \"button\",\n                                                        onClick: ()=>removeFile(index),\n                                                        className: \"text-red-500 hover:text-red-700 ml-2 z-20\",\n                                                        children: \"✕\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                        lineNumber: 299,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                ]\n                                            }, index, true, {\n                                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                lineNumber: 295,\n                                                columnNumber: 21\n                                            }, undefined))\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                    lineNumber: 283,\n                                    columnNumber: 17\n                                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    children: \"Arraste seus arquivos SRT aqui\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                    lineNumber: 312,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"my-3 text-sm\",\n                                                    children: \"- ou -\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                    lineNumber: 313,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                            lineNumber: 311,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"rounded-sm bg-[#d9d9d9] py-2 px-2 cursor-pointer hover:bg-[#c9c9c9]\",\n                                            onClick: isElectron ? handleOpenElectronFileDialog : ()=>{\n                                                var _document_querySelector;\n                                                return (_document_querySelector = document.querySelector('input[type=\"file\"]')) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.click();\n                                            },\n                                            children: \"Procurar arquivos SRT…\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                            lineNumber: 315,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true)\n                            }, void 0, false, {\n                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                lineNumber: 281,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                            lineNumber: 280,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                        lineNumber: 279,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                lineNumber: 260,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"md:h-6\"\n            }, void 0, false, {\n                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                lineNumber: 328,\n                columnNumber: 7\n            }, undefined),\n            files.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"srt-file\",\n                                className: \"block font-bold md:pl-8 mt-6 md:mt-2 py-4 text-lg text-[#444444]\",\n                                children: \"✅ Pronto para traduzir para Portugu\\xeas Brasileiro\"\n                            }, void 0, false, {\n                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                lineNumber: 333,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"rounded-lg bg-[#fafafa] text-[#444444] py-4 md:py-8 md:px-8 relative flex flex-col gap-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-center md:text-left\",\n                                        children: \"Os arquivos ser\\xe3o traduzidos para Portugu\\xeas Brasileiro e salvos com a extens\\xe3o .pt.srt\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                        lineNumber: 340,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                htmlFor: \"api-key\",\n                                                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                                                children: \"Google Gemini API Key\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                lineNumber: 343,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mt-1 flex flex-col md:flex-row gap-2\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                        type: \"text\",\n                                                        id: \"api-key\",\n                                                        className: \"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md p-2 border\",\n                                                        placeholder: \"Insira sua API key do Google Gemini\",\n                                                        value: localApiKey,\n                                                        onChange: handleApiKeyChange\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                        lineNumber: 347,\n                                                        columnNumber: 19\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"https://aistudio.google.com/app/apikey\",\n                                                        target: \"_blank\",\n                                                        rel: \"noopener noreferrer\",\n                                                        className: \"text-blue-600 hover:text-blue-800 text-sm md:self-center\",\n                                                        children: \"Obter API key\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                        lineNumber: 355,\n                                                        columnNumber: 19\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                lineNumber: 346,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"mt-1 text-xs text-gray-500\",\n                                                children: \"\\xc9 necess\\xe1rio uma API key do Google Gemini para fazer a tradu\\xe7\\xe3o. Esta chave ser\\xe1 salva localmente no seu navegador.\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                lineNumber: 364,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                        lineNumber: 342,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    apiError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-red-600 bg-red-50 p-3 rounded-md border border-red-200\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"font-bold\",\n                                                children: \"Erro:\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                lineNumber: 371,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                children: apiError\n                                            }, void 0, false, {\n                                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                                lineNumber: 372,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                        lineNumber: 370,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                lineNumber: 339,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"h-2\"\n                            }, void 0, false, {\n                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                                lineNumber: 376,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                        lineNumber: 332,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        disabled: files.length === 0 || files.every((f)=>f.translated),\n                        className: \"bg-[#444444] hover:bg-[#3a3a3a] text-white mt-6 font-bold py-2 px-6 rounded-lg disabled:bg-[#eeeeee] disabled:text-[#aaaaaa]\",\n                        children: files.every((f)=>f.translated) ? \"Todos os arquivos foram traduzidos\" : \"Traduzir para Portugu\\xeas Brasileiro →\"\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n                        lineNumber: 378,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Form.tsx\",\n        lineNumber: 250,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SrtForm, \"a7RB5xKKXOpkaKRRXU+m1PnNSYo=\");\n_c = SrtForm;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SrtForm);\nvar _c;\n$RefreshReg$(_c, \"SrtForm\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Form.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/Timestamp.tsx":
/*!**********************************!*\
  !*** ./components/Timestamp.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tailwindcss_tailwind_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tailwindcss/tailwind.css */ \"(app-pages-browser)/./node_modules/tailwindcss/tailwind.css\");\n\n\n\nconst Timestamp = (param)=>{\n    let { index, start, end, text, originalText } = param;\n    const formatTimestamp = (timestamp)=>{\n        let [hours, minutes, secondsWithMs] = timestamp.split(\":\");\n        const [seconds, ms] = secondsWithMs.split(\",\");\n        return \"\".concat(minutes, \":\").concat(seconds, \".\").concat(ms[0]);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center mb-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xl\",\n                                children: \"⏲\"\n                            }, void 0, false, {\n                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                                lineNumber: 23,\n                                columnNumber: 6\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"ml-2 text-gray-400\",\n                                children: formatTimestamp(start)\n                            }, void 0, false, {\n                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                                lineNumber: 24,\n                                columnNumber: 6\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                        lineNumber: 22,\n                        columnNumber: 5\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xl\",\n                                children: \"⏲\"\n                            }, void 0, false, {\n                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                                lineNumber: 27,\n                                columnNumber: 6\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"ml-2 text-gray-400\",\n                                children: formatTimestamp(end)\n                            }, void 0, false, {\n                                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                                lineNumber: 28,\n                                columnNumber: 6\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 5\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                lineNumber: 21,\n                columnNumber: 4\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-grow flex gap-4 ml-4\",\n                children: [\n                    originalText && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                        className: \"flex-grow h-full bg-gray-100 p-2 rounded-lg text-gray-500\",\n                        value: originalText,\n                        readOnly: true\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                        lineNumber: 33,\n                        columnNumber: 6\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                        className: \"flex-grow h-full bg-gray-200 p-2 rounded-lg\",\n                        value: text,\n                        readOnly: true\n                    }, void 0, false, {\n                        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                        lineNumber: 39,\n                        columnNumber: 5\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n                lineNumber: 31,\n                columnNumber: 4\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/user/Downloads/legendas/srt-ai/components/Timestamp.tsx\",\n        lineNumber: 20,\n        columnNumber: 3\n    }, undefined);\n};\n_c = Timestamp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Timestamp);\nvar _c;\n$RefreshReg$(_c, \"Timestamp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvVGltZXN0YW1wLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDQTtBQUdsQyxNQUFNQyxZQUFtRDtRQUFDLEVBQ3pEQyxLQUFLLEVBQ0xDLEtBQUssRUFDTEMsR0FBRyxFQUNIQyxJQUFJLEVBQ0pDLFlBQVksRUFDWjtJQUNBLE1BQU1DLGtCQUFrQixDQUFDQztRQUN4QixJQUFJLENBQUNDLE9BQU9DLFNBQVNDLGNBQWMsR0FBR0gsVUFBVUksS0FBSyxDQUFDO1FBQ3RELE1BQU0sQ0FBQ0MsU0FBU0MsR0FBRyxHQUFHSCxjQUFjQyxLQUFLLENBQUM7UUFFMUMsT0FBTyxHQUFjQyxPQUFYSCxTQUFRLEtBQWNJLE9BQVhELFNBQVEsS0FBUyxPQUFOQyxFQUFFLENBQUMsRUFBRTtJQUN0QztJQUVBLHFCQUNDLDhEQUFDQztRQUFJQyxXQUFVOzswQkFDZCw4REFBQ0Q7Z0JBQUlDLFdBQVU7O2tDQUNkLDhEQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2QsOERBQUNDO2dDQUFLRCxXQUFVOzBDQUFVOzs7Ozs7MENBQzFCLDhEQUFDRTtnQ0FBRUYsV0FBVTswQ0FBc0JULGdCQUFnQko7Ozs7Ozs7Ozs7OztrQ0FFcEQsOERBQUNZO3dCQUFJQyxXQUFVOzswQ0FDZCw4REFBQ0M7Z0NBQUtELFdBQVU7MENBQVU7Ozs7OzswQ0FDMUIsOERBQUNFO2dDQUFFRixXQUFVOzBDQUFzQlQsZ0JBQWdCSDs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUdyRCw4REFBQ1c7Z0JBQUlDLFdBQVU7O29CQUNiViw4QkFDQSw4REFBQ2E7d0JBQ0FILFdBQVU7d0JBQ1ZJLE9BQU9kO3dCQUNQZSxRQUFROzs7Ozs7a0NBR1YsOERBQUNGO3dCQUNBSCxXQUFVO3dCQUNWSSxPQUFPZjt3QkFDUGdCLFFBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtiO0tBMUNNcEI7QUE0Q04sK0RBQWVBLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9UaW1lc3RhbXAudHN4PzAyZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgXCJ0YWlsd2luZGNzcy90YWlsd2luZC5jc3NcIjtcbmltcG9ydCB0eXBlIHsgQ2h1bmsgfSBmcm9tIFwiQC90eXBlc1wiO1xuXG5jb25zdCBUaW1lc3RhbXA6IEZDPENodW5rICYgeyBvcmlnaW5hbFRleHQ/OiBzdHJpbmcgfT4gPSAoe1xuXHRpbmRleCxcblx0c3RhcnQsXG5cdGVuZCxcblx0dGV4dCxcblx0b3JpZ2luYWxUZXh0LFxufSkgPT4ge1xuXHRjb25zdCBmb3JtYXRUaW1lc3RhbXAgPSAodGltZXN0YW1wOiBzdHJpbmcpID0+IHtcblx0XHRsZXQgW2hvdXJzLCBtaW51dGVzLCBzZWNvbmRzV2l0aE1zXSA9IHRpbWVzdGFtcC5zcGxpdChcIjpcIik7XG5cdFx0Y29uc3QgW3NlY29uZHMsIG1zXSA9IHNlY29uZHNXaXRoTXMuc3BsaXQoXCIsXCIpO1xuXG5cdFx0cmV0dXJuIGAke21pbnV0ZXN9OiR7c2Vjb25kc30uJHttc1swXX1gO1xuXHR9O1xuXG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9XCJmbGV4XCI+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyXCI+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgbWItMVwiPlxuXHRcdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT1cInRleHQteGxcIj7ij7I8L3NwYW4+XG5cdFx0XHRcdFx0PHAgY2xhc3NOYW1lPVwibWwtMiB0ZXh0LWdyYXktNDAwXCI+e2Zvcm1hdFRpbWVzdGFtcChzdGFydCl9PC9wPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuXHRcdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT1cInRleHQteGxcIj7ij7I8L3NwYW4+XG5cdFx0XHRcdFx0PHAgY2xhc3NOYW1lPVwibWwtMiB0ZXh0LWdyYXktNDAwXCI+e2Zvcm1hdFRpbWVzdGFtcChlbmQpfTwvcD5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiZmxleC1ncm93IGZsZXggZ2FwLTQgbWwtNFwiPlxuXHRcdFx0XHR7b3JpZ2luYWxUZXh0ICYmIChcblx0XHRcdFx0XHQ8dGV4dGFyZWFcblx0XHRcdFx0XHRcdGNsYXNzTmFtZT1cImZsZXgtZ3JvdyBoLWZ1bGwgYmctZ3JheS0xMDAgcC0yIHJvdW5kZWQtbGcgdGV4dC1ncmF5LTUwMFwiXG5cdFx0XHRcdFx0XHR2YWx1ZT17b3JpZ2luYWxUZXh0fVxuXHRcdFx0XHRcdFx0cmVhZE9ubHlcblx0XHRcdFx0XHQvPlxuXHRcdFx0XHQpfVxuXHRcdFx0XHQ8dGV4dGFyZWFcblx0XHRcdFx0XHRjbGFzc05hbWU9XCJmbGV4LWdyb3cgaC1mdWxsIGJnLWdyYXktMjAwIHAtMiByb3VuZGVkLWxnXCJcblx0XHRcdFx0XHR2YWx1ZT17dGV4dH1cblx0XHRcdFx0XHRyZWFkT25seVxuXHRcdFx0XHQvPlxuXHRcdFx0PC9kaXY+XG5cdFx0PC9kaXY+XG5cdCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBUaW1lc3RhbXA7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJUaW1lc3RhbXAiLCJpbmRleCIsInN0YXJ0IiwiZW5kIiwidGV4dCIsIm9yaWdpbmFsVGV4dCIsImZvcm1hdFRpbWVzdGFtcCIsInRpbWVzdGFtcCIsImhvdXJzIiwibWludXRlcyIsInNlY29uZHNXaXRoTXMiLCJzcGxpdCIsInNlY29uZHMiLCJtcyIsImRpdiIsImNsYXNzTmFtZSIsInNwYW4iLCJwIiwidGV4dGFyZWEiLCJ2YWx1ZSIsInJlYWRPbmx5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Timestamp.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./fonts/index.ts":
/*!************************!*\
  !*** ./fonts/index.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   libre: function() { return /* reexport default from dynamic */ next_font_google_target_css_path_fonts_index_ts_import_Libre_Baskerville_arguments_weight_700_subsets_latin_variableName_libre___WEBPACK_IMPORTED_MODULE_1___default.a; },\n/* harmony export */   roaldDahl: function() { return /* reexport default from dynamic */ next_font_local_target_css_path_fonts_index_ts_import_arguments_src_RoaldDahlWonkyBold_woff_variableName_roaldDahl___WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var next_font_local_target_css_path_fonts_index_ts_import_arguments_src_RoaldDahlWonkyBold_woff_variableName_roaldDahl___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/font/local/target.css?{\"path\":\"fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./RoaldDahlWonkyBold.woff\"}],\"variableName\":\"roaldDahl\"} */ \"(app-pages-browser)/./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"fonts/index.ts\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./RoaldDahlWonkyBold.woff\\\"}],\\\"variableName\\\":\\\"roaldDahl\\\"}\");\n/* harmony import */ var next_font_local_target_css_path_fonts_index_ts_import_arguments_src_RoaldDahlWonkyBold_woff_variableName_roaldDahl___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_font_local_target_css_path_fonts_index_ts_import_arguments_src_RoaldDahlWonkyBold_woff_variableName_roaldDahl___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_fonts_index_ts_import_Libre_Baskerville_arguments_weight_700_subsets_latin_variableName_libre___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"fonts/index.ts\",\"import\":\"Libre_Baskerville\",\"arguments\":[{\"weight\":[\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"libre\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"fonts/index.ts\\\",\\\"import\\\":\\\"Libre_Baskerville\\\",\\\"arguments\\\":[{\\\"weight\\\":[\\\"700\\\"],\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"libre\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_fonts_index_ts_import_Libre_Baskerville_arguments_weight_700_subsets_latin_variableName_libre___WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_fonts_index_ts_import_Libre_Baskerville_arguments_weight_700_subsets_latin_variableName_libre___WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ZvbnRzL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUdhQTtBQUNBQztBQURBRDtBQUNBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9mb250cy9pbmRleC50cz84MjZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2NhbEZvbnQgZnJvbSBcIm5leHQvZm9udC9sb2NhbFwiO1xuaW1wb3J0IHsgTGlicmVfQmFza2VydmlsbGUgfSBmcm9tIFwibmV4dC9mb250L2dvb2dsZVwiO1xuXG5leHBvcnQgY29uc3Qgcm9hbGREYWhsID0gbG9jYWxGb250KHsgc3JjOiBcIi4vUm9hbGREYWhsV29ua3lCb2xkLndvZmZcIiB9KTtcbmV4cG9ydCBjb25zdCBsaWJyZSA9IExpYnJlX0Jhc2tlcnZpbGxlKHsgd2VpZ2h0OiBbXCI3MDBcIl0sIHN1YnNldHM6IFtcImxhdGluXCJdIH0pO1xuIl0sIm5hbWVzIjpbInJvYWxkRGFobCIsImxpYnJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./fonts/index.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/client.ts":
/*!***********************!*\
  !*** ./lib/client.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseSegment: function() { return /* binding */ parseSegment; },\n/* harmony export */   parseTimestamp: function() { return /* binding */ parseTimestamp; }\n/* harmony export */ });\nfunction parseSegment(text) {\n    const [id, timestamp, ...lines] = text.split(/\\r\\n|\\n/);\n    return {\n        id: parseInt(id),\n        timestamp,\n        text: lines.join(\" \")\n    };\n}\nfunction parseTimestamp(timestamps) {\n    const [start, end] = timestamps.split(\" --> \");\n    return {\n        start,\n        end\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9jbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFTyxTQUFTQSxhQUFhQyxJQUFZO0lBQ3ZDLE1BQU0sQ0FBQ0MsSUFBSUMsV0FBVyxHQUFHQyxNQUFNLEdBQUdILEtBQUtJLEtBQUssQ0FBQztJQUM3QyxPQUFPO1FBQ0xILElBQUlJLFNBQVNKO1FBQ2JDO1FBQ0FGLE1BQU1HLE1BQU1HLElBQUksQ0FBQztJQUNuQjtBQUNGO0FBRU8sU0FBU0MsZUFBZUMsVUFBa0I7SUFDL0MsTUFBTSxDQUFDQyxPQUFPQyxJQUFJLEdBQUdGLFdBQVdKLEtBQUssQ0FBQztJQUN0QyxPQUFPO1FBQUVLO1FBQU9DO0lBQUk7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2NsaWVudC50cz8xNTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlZ21lbnQgfSBmcm9tIFwiQC90eXBlc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTZWdtZW50KHRleHQ6IHN0cmluZyk6IFNlZ21lbnQge1xuICBjb25zdCBbaWQsIHRpbWVzdGFtcCwgLi4ubGluZXNdID0gdGV4dC5zcGxpdCgvXFxyXFxufFxcbi8pO1xuICByZXR1cm4ge1xuICAgIGlkOiBwYXJzZUludChpZCksXG4gICAgdGltZXN0YW1wLFxuICAgIHRleHQ6IGxpbmVzLmpvaW4oXCIgXCIpLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUaW1lc3RhbXAodGltZXN0YW1wczogc3RyaW5nKSB7XG4gIGNvbnN0IFtzdGFydCwgZW5kXSA9IHRpbWVzdGFtcHMuc3BsaXQoXCIgLS0+IFwiKTtcbiAgcmV0dXJuIHsgc3RhcnQsIGVuZCB9XG59Il0sIm5hbWVzIjpbInBhcnNlU2VnbWVudCIsInRleHQiLCJpZCIsInRpbWVzdGFtcCIsImxpbmVzIiwic3BsaXQiLCJwYXJzZUludCIsImpvaW4iLCJwYXJzZVRpbWVzdGFtcCIsInRpbWVzdGFtcHMiLCJzdGFydCIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/client.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={686:(e,r,t)=>{var n=t(808);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},808:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(686);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcz9lOWE5Il0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs2ODY6KGUscix0KT0+e3ZhciBuPXQoODA4KTt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO3ZhciBhPXR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCI7dmFyIG89QXJyYXkucHJvdG90eXBlLmZvckVhY2g7ZnVuY3Rpb24gZGVib3VuY2UoZSxyKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7dmFyIGk9YXJndW1lbnRzO3ZhciBhPWZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbCgpe3JldHVybiBlLmFwcGx5KG4saSl9O2NsZWFyVGltZW91dCh0KTt0PXNldFRpbWVvdXQoYSxyKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBnZXRDdXJyZW50U2NyaXB0VXJsKGUpe3ZhciByPWlbZV07aWYoIXIpe2lmKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpe3I9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9ZWxzZXt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTt2YXIgYT10W3QubGVuZ3RoLTFdO2lmKGEpe3I9YS5zcmN9fWlbZV09cn1yZXR1cm4gZnVuY3Rpb24oZSl7aWYoIXIpe3JldHVybiBudWxsfXZhciB0PXIuc3BsaXQoLyhbXlxcXFwvXSspXFwuanMkLyk7dmFyIGk9dCYmdFsxXTtpZighaSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19aWYoIWUpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfXJldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcIi5jb25jYXQoaSxcIlxcXFwuanMkXCIpLFwiZ1wiKTtyZXR1cm4gbihyLnJlcGxhY2UodCxcIlwiLmNvbmNhdChlLnJlcGxhY2UoL3tmaWxlTmFtZX0vZyxpKSxcIi5jc3NcIikpKX0pKX19ZnVuY3Rpb24gdXBkYXRlQ3NzKGUscil7aWYoIXIpe2lmKCFlLmhyZWYpe3JldHVybn1yPWUuaHJlZi5zcGxpdChcIj9cIilbMF19aWYoIWlzVXJsUmVxdWVzdChyKSl7cmV0dXJufWlmKGUuaXNMb2FkZWQ9PT1mYWxzZSl7cmV0dXJufWlmKCFyfHwhKHIuaW5kZXhPZihcIi5jc3NcIik+LTEpKXtyZXR1cm59ZS52aXNpdGVkPXRydWU7dmFyIHQ9ZS5jbG9uZU5vZGUoKTt0LmlzTG9hZGVkPWZhbHNlO3QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuaHJlZj1cIlwiLmNvbmNhdChyLFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7aWYoZS5uZXh0U2libGluZyl7ZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LGUubmV4dFNpYmxpbmcpfWVsc2V7ZS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBnZXRSZWxvYWRVcmwoZSxyKXt2YXIgdDtlPW4oZSx7c3RyaXBXV1c6ZmFsc2V9KTtyLnNvbWUoKGZ1bmN0aW9uKG4pe2lmKGUuaW5kZXhPZihyKT4tMSl7dD1ufX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRTdHlsZShlKXtpZighZSl7cmV0dXJuIGZhbHNlfXZhciByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO3ZhciB0PWZhbHNlO28uY2FsbChyLChmdW5jdGlvbihyKXtpZighci5ocmVmKXtyZXR1cm59dmFyIG49Z2V0UmVsb2FkVXJsKHIuaHJlZixlKTtpZighaXNVcmxSZXF1ZXN0KG4pKXtyZXR1cm59aWYoci52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufWlmKG4pe3VwZGF0ZUNzcyhyLG4pO3Q9dHJ1ZX19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkQWxsKCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7by5jYWxsKGUsKGZ1bmN0aW9uKGUpe2lmKGUudmlzaXRlZD09PXRydWUpe3JldHVybn11cGRhdGVDc3MoZSl9KSl9ZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KGUpe2lmKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KGUpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYoYSl7Y29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7cmV0dXJuIG5vb3B9dmFyIHQ9Z2V0Q3VycmVudFNjcmlwdFVybChlKTtmdW5jdGlvbiB1cGRhdGUoKXt2YXIgZT10KHIuZmlsZW5hbWUpO3ZhciBuPXJlbG9hZFN0eWxlKGUpO2lmKHIubG9jYWxzKXtjb25zb2xlLmxvZyhcIltITVJdIERldGVjdGVkIGxvY2FsIGNzcyBtb2R1bGVzLiBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKTtyZXR1cm59aWYobil7Y29uc29sZS5sb2coXCJbSE1SXSBjc3MgcmVsb2FkICVzXCIsZS5qb2luKFwiIFwiKSl9ZWxzZXtjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpfX1yZXR1cm4gZGVib3VuY2UodXBkYXRlLDUwKX19LDgwODplPT57ZnVuY3Rpb24gbm9ybWFsaXplVXJsKGUpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxyKXtzd2l0Y2gocil7Y2FzZVwiLi5cIjplLnBvcCgpO2JyZWFrO2Nhc2VcIi5cIjpicmVhaztkZWZhdWx0OmUucHVzaChyKX1yZXR1cm4gZX0pLFtdKS5qb2luKFwiL1wiKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZT1lLnRyaW0oKTtpZigvXmRhdGE6L2kudGVzdChlKSl7cmV0dXJuIGV9dmFyIHI9ZS5pbmRleE9mKFwiLy9cIikhPT0tMT9lLnNwbGl0KFwiLy9cIilbMF0rXCIvL1wiOlwiXCI7dmFyIHQ9ZS5yZXBsYWNlKG5ldyBSZWdFeHAocixcImlcIiksXCJcIikuc3BsaXQoXCIvXCIpO3ZhciBuPXRbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLyxcIlwiKTt0WzBdPVwiXCI7dmFyIGk9bm9ybWFsaXplVXJsKHQpO3JldHVybiByK24raX19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHQpe3ZhciBuPXJbdF07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW3RdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW3RdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciB0PV9fbmNjd3Bja19yZXF1aXJlX18oNjg2KTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"fonts/index.ts\",\"import\":\"Libre_Baskerville\",\"arguments\":[{\"weight\":[\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"libre\"}":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"fonts/index.ts","import":"Libre_Baskerville","arguments":[{"weight":["700"],"subsets":["latin"]}],"variableName":"libre"} ***!
  \*************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Libre_Baskerville_fa9ee3', '__Libre_Baskerville_Fallback_fa9ee3'\",\"fontWeight\":700,\"fontStyle\":\"normal\"},\"className\":\"__className_fa9ee3\"};\n    if(true) {\n      // 1749045166820\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1wicGF0aFwiOlwiZm9udHMvaW5kZXgudHNcIixcImltcG9ydFwiOlwiTGlicmVfQmFza2VydmlsbGVcIixcImFyZ3VtZW50c1wiOlt7XCJ3ZWlnaHRcIjpbXCI3MDBcIl0sXCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwibGlicmVcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyx5SEFBeUg7QUFDcEosT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQTJILGNBQWMsc0RBQXNEO0FBQzdOLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz83YTY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX0xpYnJlX0Jhc2tlcnZpbGxlX2ZhOWVlMycsICdfX0xpYnJlX0Jhc2tlcnZpbGxlX0ZhbGxiYWNrX2ZhOWVlMydcIixcImZvbnRXZWlnaHRcIjo3MDAsXCJmb250U3R5bGVcIjpcIm5vcm1hbFwifSxcImNsYXNzTmFtZVwiOlwiX19jbGFzc05hbWVfZmE5ZWUzXCJ9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3NDkwNDUxNjY4MjBcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiL1VzZXJzL3VzZXIvRG93bmxvYWRzL2xlZ2VuZGFzL3NydC1haS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcInB1YmxpY1BhdGhcIjpcIi9fbmV4dC9cIixcImVzTW9kdWxlXCI6ZmFsc2UsXCJsb2NhbHNcIjp0cnVlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIFxuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"fonts/index.ts\",\"import\":\"Libre_Baskerville\",\"arguments\":[{\"weight\":[\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"libre\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./RoaldDahlWonkyBold.woff\"}],\"variableName\":\"roaldDahl\"}":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/local/target.css?{"path":"fonts/index.ts","import":"","arguments":[{"src":"./RoaldDahlWonkyBold.woff"}],"variableName":"roaldDahl"} ***!
  \********************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__roaldDahl_c91411', '__roaldDahl_Fallback_c91411'\"},\"className\":\"__className_c91411\"};\n    if(true) {\n      // 1749045166835\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJmb250cy9pbmRleC50c1wiLFwiaW1wb3J0XCI6XCJcIixcImFyZ3VtZW50c1wiOlt7XCJzcmNcIjpcIi4vUm9hbGREYWhsV29ua3lCb2xkLndvZmZcIn1dLFwidmFyaWFibGVOYW1lXCI6XCJyb2FsZERhaGxcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxtRUFBbUU7QUFDOUYsT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQTJILGNBQWMsc0RBQXNEO0FBQzdOLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9sb2NhbC90YXJnZXQuY3NzPzNkYTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN0eWxlXCI6e1wiZm9udEZhbWlseVwiOlwiJ19fcm9hbGREYWhsX2M5MTQxMScsICdfX3JvYWxkRGFobF9GYWxsYmFja19jOTE0MTEnXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV9jOTE0MTFcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTc0OTA0NTE2NjgzNVxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIvVXNlcnMvdXNlci9Eb3dubG9hZHMvbGVnZW5kYXMvc3J0LWFpL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"fonts/index.ts\",\"import\":\"\",\"arguments\":[{\"src\":\"./RoaldDahlWonkyBold.woff\"}],\"variableName\":\"roaldDahl\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/YTIxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fuser%2FDownloads%2Flegendas%2Fsrt-ai%2Fapp%2Fpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);